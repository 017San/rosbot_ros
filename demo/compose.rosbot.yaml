services:

  # ROS Galactic
  navigation:
    image: husarion/navigation2:galactic
    container_name: nav2
    restart: unless-stopped
    volumes: 
      - ./config/nav2_params.yaml:/nav2_params.yaml
    command: >
      ros2 launch nav2_bringup navigation_launch.py    
        params_file:=/nav2_params.yaml
    
  rplidar:
    image: husarion/rplidar:galactic
    container_name: rplidar-galactic
    restart: unless-stopped
    devices:
      - /dev/ttyUSB0
    command: ros2 launch rplidar_ros2 rplidar_launch.py

  # ROS Noetic + ROS 2 Galactic
  bridge:
    image: husarion/ros:galactic-ros1-bridge
    container_name: ros-bridge
    restart: unless-stopped
    environment:
      - ROS_MASTER_URI=http://ros-master:11311
    command: ros2 run ros1_bridge dynamic_bridge


  # ROS Melodic master
  ros-master:
    image: ros:melodic-ros-core
    container_name: ros-master
    restart: unless-stopped
    command: stdbuf -o L roscore


  # ROS Melodic rosbot hardware layer
  rosbot:
    image: husarion/rosbot:melodic
    container_name: rosbot
    restart: unless-stopped
    devices:
      - ${SERIAL_PORT} 
    environment:
      - SERIAL_PORT
      - ROS_MASTER_URI=http://ros-master:11311
    command: roslaunch --wait rosbot_description rosbot_docker.launch